name: Python Flask CI/CD

on:
  push:
    branches: [ test, main ]  # Run tests on pushes to test and main branches
  pull_request:
    branches: [ main ]  # Run tests on PRs targeting main branch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: python -m pytest  # Run pytest as a module

  deploy:
    needs: test
    runs-on: ubuntu-latest
    # This now checks if the push is to the main branch
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install SSH client
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass
    - name: Deploy to remote server
      env:
        SSH_PASS: ${{ secrets.REMOTE_SSH_PASS }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        USERNAME: ${{ secrets.REMOTE_USER }}
        PORT: ${{ secrets.REMOTE_PORT }}
      run: |
        sshpass -p $SSH_PASS ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER_IP -p $PORT << 'ENDSSH'
          # Ensure the service is stopped before pulling changes
          sudo systemctl stop app.service 
          # Navigate to your app directory if it's not the home directory of the USERNAME
          cd /path/to/your/app
          # Pull the latest changes
          git pull origin main
          # Install any new dependencies
          pip install -r requirements.txt
          # Apply any migrations if you have any (Flask-Migrate or Alembic)
          # flask db upgrade  # Uncomment if using Flask-Migrate or similar
          # Restart the application
          sudo systemctl start app.service
        ENDSSH
