name: Flask CI/CD Workflow

on:
  push:
    branches: [ main, test ]
  pull_request:
    branches: [ main, test ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run linting
      run: |
        # Add linting commands here (e.g., flake8)
    - name: Run unit tests
      run: |
        # Add unit test commands here (e.g., pytest)

  e2e_tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run E2E tests
      run: |
        # Add E2E test commands here

  deploy:
    needs: e2e_tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - name: Build and push Docker image
      run: |
        docker build -t your-docker-repo/your-app:${{ github.sha }} .
        docker push your-docker-repo/your-app:${{ github.sha }}
    - name: Deploy to remote VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker pull your-docker-repo/your-app:${{ github.sha }}
          docker stop web || true
          docker rm web || true
          docker run --name web -d -p 80:80 your-docker-repo/your-app:${{ github.sha }}
