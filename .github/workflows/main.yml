name: Python Flask CI/CD

on:
  push:
    branches: [ test, main ] 
  pull_request:
    branches: [ main ]  

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: python -m pytest 

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Set up SSH key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.REMOTE_SSH_PASS }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -p ${{ secrets.REMOTE_PORT }} ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
    - name: Deploy to remote server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        USERNAME: ${{ secrets.REMOTE_USER }}
        PORT: ${{ secrets.REMOTE_PORT }}
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $USERNAME@$SERVER_IP -p $PORT << 'ENDSSH'
          # Ensure the service is stopped before pulling changes
          sudo systemctl stop app.service 
          # Navigate to your app directory if it's not the home directory of the USERNAME
          cd /path/to/your/app
          # Pull the latest changes
          git pull origin main
          # Install any new dependencies
          pip install -r requirements.txt
          # Apply any migrations if you have any (Flask-Migrate or Alembic)
          # flask db upgrade  # Uncomment if using Flask-Migrate or similar
          # Restart the application
          sudo systemctl start app.service
        ENDSSH

